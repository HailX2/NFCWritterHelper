//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NFNdefMessage, NSArray, NSData, NSDictionary, NSMutableArray, NSMutableData, NSString;

@interface NFCChipManager : NSObject
{
    int errorCounter;
    _Bool isFormatSession;
    _Bool isWriteSession;
    _Bool isCleanFormatSession;
    _Bool isCopyTagSession;
    _Bool shouldRestartSessionOnResume;
    NSArray *_copiedNDEFRecords;
    NSArray *recordsToWrite;
    int sock;
    int serverState;
    int manualSessionState;
    int clientState;
    int serverPort;
    NSData *hostedTagID;
    NSMutableData *serversessionkey;
    NSData *formatKey;
    NSDictionary *MRTDData;
    NSString *cardVerificationString;
    NFNdefMessage *customEmulationMessage;
    int RF_DISCOVER_CMD_COUNT;
    int _readMemoryTagState;
    NSMutableArray *_mifareSectorsFound;
    int _mifareCurrentSector;
    _Bool _eraseMifare;
    _Bool _formatMifareToNDEF;
    _Bool _needsSecondaryKey;
    _Bool wantsKeyB;
    _Bool wantsKeyC;
    _Bool _isReadMemoryRelatedOperation;
    id currentSession;
    id _underlyingSession;
}

+ (id)doCipher3DES:(id)arg1 key:(id)arg2;
+ (id)sharedInstance;
+ (id)sharedInstanceIfExists;
@property(retain, nonatomic) id underlyingSession; // @synthesize underlyingSession=_underlyingSession;
@property(retain, nonatomic) id currentSession; // @synthesize currentSession;
- (void)didConnectTag:(id)arg1 withSession:(id)arg2 withInfoDict:(id)arg3 shouldReturn:(_Bool *)arg4 shouldGoToFinish:(_Bool *)arg5 writableResult:(_Bool *)arg6 supportsRead:(_Bool *)arg7 supportsWrite:(_Bool *)arg8 isMifare:(_Bool)arg9 isTagCMD:(_Bool)arg10 is15693:(_Bool)arg11 isT2T:(_Bool)arg12 needsRestart:(_Bool)arg13 foundNDEFMessage:(id *)arg14;
- (id)checkForNDEFManuallyAndFetchAllowsRead:(_Bool *)arg1 write:(_Bool *)arg2 formatted:(_Bool *)arg3 outNdefData:(id *)arg4;
- (void)startManualReadT2T;
- (id)constructTransactionDictionaryFromHexString:(id)arg1;
- (id)decodeGPCS:(id)arg1;
- (id)ICDateForCode:(id)arg1;
- (id)OSProviderForCode:(id)arg1;
- (id)icTypeNameForCode:(id)arg1;
- (id)ICFabricatorNameForCode:(id)arg1;
- (id)deriveKeyWithKseed:(id)arg1 isMAC:(_Bool)arg2;
- (id)getCCWithkMAC:(id)arg1 inData:(id)arg2 pad:(_Bool)arg3;
- (id)increment8DataBytes:(id)arg1;
- (id)addPadding:(id)arg1;
- (id)readMRTDBinaryBlock:(unsigned char)arg1 start:(unsigned char)arg2 end:(unsigned char)arg3 ksmac:(id)arg4 ksenc:(id)arg5 outDataLength:(int *)arg6;
- (_Bool)selectMRTDFile:(unsigned char)arg1 ksmac:(id)arg2 ksenc:(id)arg3;
- (id)readFullMRTDBinaryWithKSMAC:(id)arg1 KSENC:(id)arg2;
- (int)mrtd_fileread_read:(const char *)arg1 output:(char *)arg2 outputLength:(int *)arg3 ksenc:(id)arg4 ksmac:(id)arg5;
- (id)getMRTDImageFromData:(id)arg1;
- (id)checkForEMVWithRestartRF:(_Bool)arg1;
- (id)desfireGetVersion:(int *)arg1;
- (id)desfireGetAppIDs:(int *)arg1;
- (id)desfireGetMasterKeySettings:(int *)arg1;
- (id)desfireGetKeyVersionForKey:(unsigned char)arg1 error:(int *)arg2;
- (id)desfireAppNameForAppId:(id)arg1;
- (id)desfireGetFreeMemory:(int *)arg1;
- (id)desfireParseFilesInAIDs:(id)arg1;
- (id)checkForDesfireApps;
- (_Bool)connectISODEPTag;
- (unsigned char)MRTD_EF_For_ShortTag:(unsigned char)arg1;
- (int)checkDigitForInput:(id)arg1;
- (void)notifyMRTDEnded;
- (void)notifyEMVEnded;
- (id)checkForISODEPNDEFWithWriteSupported:(_Bool *)arg1;
- (void)openAIDFromResponse:(id)arg1;
- (id)explainTLVFromString:(id)arg1;
- (int)hasOddParity:(unsigned int)arg1;
- (id)foundTLVS;
- (id)processTLVData:(id)arg1 existingDict:(id)arg2;
- (id)manufacturerForHex:(int)arg1;
- (id)TLVKeyToName:(id)arg1;
- (id)rfProtocolTypeForHex:(int)arg1;
- (id)interfaceTypeForHex:(int)arg1;
- (_Bool)formatTagToNdefWithSession:(id)arg1;
- (_Bool)formatUltralightTag;
- (_Bool)formatUltralightTagGlobalWithErase:(_Bool)arg1;
- (_Bool)formatTagWithSession:(id)arg1;
- (void)writeCustomNdefRecordsToSession:(id)arg1 withRecords:(id)arg2;
- (void)startHostEmulationWithUID:(id)arg1 isServerClient:(_Bool)arg2;
- (void)serverClientDataWrite:(id)arg1;
- (void)serverClientDataRead:(id)arg1;
- (void)stopHostEmulation;
- (id)enableIsoDep;
- (id)startPolling;
- (id)setupForReading;
- (id)setListenModeRouting;
- (id)enableNFCEEDiscover:(_Bool)arg1;
- (id)createConnection;
- (id)disableNFCEE;
- (id)enableNFCEE;
- (id)setStandByOn:(_Bool)arg1;
- (id)endRF;
- (id)propExt;
- (id)initCMD;
- (id)resetCMD:(_Bool)arg1;
- (id)resetCMD;
- (void)startCardReader;
- (void)handleReaderSessionWrites:(id)arg1;
- (void)limTagsDetected:(id)arg1;
- (void)manuallyReadData:(id)arg1;
- (void)handleReaderSessionReads:(id)arg1;
- (void)didTerminate:(id)arg1;
- (void)startEmulatorV2WithUID:(id)arg1 ndefMessage:(id)arg2;
- (void)startManualEmulationV2WithUID:(id)arg1 ndefMessage:(id)arg2;
- (void)manualEmulationV2DataWrite:(id)arg1;
- (void)AutoEmulationV2DataWrite:(id)arg1;
- (void)manualEmulationV2DataRead:(id)arg1;
- (void)AutoEmulationV2DataRead:(id)arg1;
- (void)receivedReadHandleNDEFManually:(id)arg1;
- (void)connectToServerWithIpOrHostname:(id)arg1 port:(int)arg2;
- (void)handleHostDataRead:(id)arg1;
- (_Bool)connectClientToHostname:(id)arg1 port:(int)arg2;
- (id)getMasterKeyWithOption:(int)arg1;
- (id)testDecrypt:(id)arg1 key:(id)arg2;
- (id)testEncrypt:(id)arg1 key:(id)arg2;
- (id)DES3Process:(id)arg1 key:(id)arg2 operation:(unsigned int)arg3 padding:(unsigned int *)arg4;
- (id)DES3Process:(id)arg1 key:(id)arg2 operation:(unsigned int)arg3 ecb:(_Bool)arg4;
- (id)generateCVN10ApplicationCryptogramWithSessionKey:(id)arg1 termimalData:(id)arg2 iccData:(id)arg3;
- (id)generateCVN14ApplicationCryptogramWithSessionKey:(id)arg1 termimalData:(id)arg2 iccData:(id)arg3;
- (id)genAC;
- (void)setSK:(id)arg1;
- (void)setICC:(id)arg1;
- (void)setTD:(id)arg1;
- (id)deriveCommonSessionKey:(id)arg1 atc:(id)arg2;
- (void)ndefTagSessionDidEndUnexpectedly:(id)arg1;
- (void)ndefTagSession:(id)arg1 didTagStateChange:(unsigned int)arg2;
- (void)startCardReaderOnMainThread;
- (void)setupXPC;
- (id)xpcConnection;
- (void)endCurrentSession;
- (void)startCopyTagSession;
- (void)startCleanFormatterWithKey:(id)arg1;
- (void)startCardFormatter;
- (void)stopCardFormatter;
- (_Bool)isNormalReaderSession;
- (void)stopAnyPendingCustomSessions;
- (void)startCardWriterWithRecordsToWrite:(id)arg1;
- (id)recordsToWrite;
- (void)startReadMemoryAndErase:(_Bool)arg1 formatToNDEF:(_Bool)arg2;
- (void)readMemoryData:(id)arg1;
- (_Bool)deactivateRFAndWaitForNotification;
- (_Bool)endRFAndWaitForNotification;
- (void)stopCardWriter;
- (id)transceive:(id)arg1;
- (id)readLastLine;
- (id)data:(id)arg1;
- (void)write:(id)arg1;
- (void)writeData:(id)arg1;
- (_Bool)pingNFCD;
- (void)setMifareKey:(int)arg1;
- (void)setGPIO:(int)arg1 toValue:(_Bool)arg2;
- (void)enableWrites:(_Bool)arg1;
- (id)getValueForRegister:(id)arg1;
- (id)setValue:(id)arg1 forRegister:(id)arg2;
- (id)setDiscoverMap;
- (id)putInAcceptSettingsMode;
- (_Bool)silenced;
- (int)setupServerWithUID:(id)arg1;
- (void)startManualSessionWithState:(int)arg1;
- (void)startServerSessionWithState:(int)arg1;
- (void)startServerAtPort:(int)arg1;
- (void)fieldDetectSessionDidEndUnexpectedly:(id)arg1;
- (int)clientState;
- (int)serverState;
- (void)RF_Notification:(id)arg1;
- (void)stopServerWithReason:(id)arg1;
- (void)stopManualSessionWithReason:(id)arg1;
- (void)InterfaceRFError:(id)arg1;
- (id)init;
- (void)handleApplicationDidBecomeActive:(id)arg1;
- (void)handleApplicationWillEnterBackground:(id)arg1;
- (void)setRecordsToWrite:(id)arg1;
- (void)setIsFormatSession:(_Bool)arg1;
- (void)setIsCleanFormatSession:(_Bool)arg1;
- (void)setIsWriteSession:(_Bool)arg1;
- (void)setIsCopyTagSession:(_Bool)arg1;
- (_Bool)isCopyTagSession;
- (_Bool)isFormatSession;
- (_Bool)isCleanFormatSession;
- (_Bool)isWriteSession;
- (id)serversessionkey;
- (id)hostedTagID;
- (void)setCardVerificationString:(id)arg1;
- (void)setMRTDData:(id)arg1;
- (int)manualSessionState;

@end

