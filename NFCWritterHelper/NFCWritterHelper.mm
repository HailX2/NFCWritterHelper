#line 1 "/Users/xiao.han/Documents/插件/NFCWritterHelper/NFCWritterHelper/NFCWritterHelper.xm"


#if TARGET_OS_SIMULATOR
#error Do not support the simulator, please use the real iPhone Device.
#endif

#import <UIKit/UIKit.h>
#import "Header.h"



#include <substrate.h>
#if defined(__clang__)
#if __has_feature(objc_arc)
#define _LOGOS_SELF_TYPE_NORMAL __unsafe_unretained
#define _LOGOS_SELF_TYPE_INIT __attribute__((ns_consumed))
#define _LOGOS_SELF_CONST const
#define _LOGOS_RETURN_RETAINED __attribute__((ns_returns_retained))
#else
#define _LOGOS_SELF_TYPE_NORMAL
#define _LOGOS_SELF_TYPE_INIT
#define _LOGOS_SELF_CONST
#define _LOGOS_RETURN_RETAINED
#endif
#else
#define _LOGOS_SELF_TYPE_NORMAL
#define _LOGOS_SELF_TYPE_INIT
#define _LOGOS_SELF_CONST
#define _LOGOS_RETURN_RETAINED
#endif

@class EmulationViewController; @class MainTabBarController; 
static void (*_logos_orig$_ungrouped$MainTabBarController$tabBarController$didSelectViewController$)(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST, SEL, id, id); static void _logos_method$_ungrouped$MainTabBarController$tabBarController$didSelectViewController$(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST, SEL, id, id); static void (*_logos_orig$_ungrouped$MainTabBarController$daemonConnectionDied$)(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$MainTabBarController$daemonConnectionDied$(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$MainTabBarController$no_nfcd_connection$)(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$MainTabBarController$no_nfcd_connection$(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$MainTabBarController$mailComposeController$didFinishWithResult$error$)(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST, SEL, id, long long, id); static void _logos_method$_ungrouped$MainTabBarController$mailComposeController$didFinishWithResult$error$(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST, SEL, id, long long, id); static MainTabBarController* (*_logos_orig$_ungrouped$MainTabBarController$init)(_LOGOS_SELF_TYPE_INIT MainTabBarController*, SEL) _LOGOS_RETURN_RETAINED; static MainTabBarController* _logos_method$_ungrouped$MainTabBarController$init(_LOGOS_SELF_TYPE_INIT MainTabBarController*, SEL) _LOGOS_RETURN_RETAINED; static void (*_logos_orig$_ungrouped$MainTabBarController$viewDidLayoutSubviews)(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$MainTabBarController$viewDidLayoutSubviews(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST, SEL); static unsigned long long (*_logos_orig$_ungrouped$MainTabBarController$supportedInterfaceOrientations)(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST, SEL); static unsigned long long _logos_method$_ungrouped$MainTabBarController$supportedInterfaceOrientations(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$MainTabBarController$viewDidLoad)(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$MainTabBarController$viewDidLoad(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$EmulationViewController$title)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$EmulationViewController$title(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$EmulationViewController$showPickLength)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$EmulationViewController$showPickLength(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$EmulationViewController$setUIDLength$reset$)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, int, _Bool); static void _logos_method$_ungrouped$EmulationViewController$setUIDLength$reset$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, int, _Bool); static _Bool (*_logos_orig$_ungrouped$EmulationViewController$textField$shouldChangeCharactersInRange$replacementString$)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id, struct _NSRange, id); static _Bool _logos_method$_ungrouped$EmulationViewController$textField$shouldChangeCharactersInRange$replacementString$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id, struct _NSRange, id); static _Bool (*_logos_orig$_ungrouped$EmulationViewController$textFieldShouldReturn$)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static _Bool _logos_method$_ungrouped$EmulationViewController$textFieldShouldReturn$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$EmulationViewController$setButtonEnabled$)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, _Bool); static void _logos_method$_ungrouped$EmulationViewController$setButtonEnabled$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, _Bool); static void (*_logos_orig$_ungrouped$EmulationViewController$buttonTapped$)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$EmulationViewController$buttonTapped$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$EmulationViewController$hostSessionDidEnd$)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$EmulationViewController$hostSessionDidEnd$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$EmulationViewController$hostSessionDidStart$)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$EmulationViewController$hostSessionDidStart$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$EmulationViewController$chooseFromSaved$)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$EmulationViewController$chooseFromSaved$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$EmulationViewController$setNewUID$)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$EmulationViewController$setNewUID$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$EmulationViewController$emulationDataWrite$)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$EmulationViewController$emulationDataWrite$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$EmulationViewController$emulationDataRead$)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$EmulationViewController$emulationDataRead$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static void (*_logos_orig$_ungrouped$EmulationViewController$viewDidLoad)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$EmulationViewController$viewDidLoad(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$EmulationViewController$loadView)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL); static void _logos_method$_ungrouped$EmulationViewController$loadView(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL); static id (*_logos_orig$_ungrouped$EmulationViewController$emulationNDEFMessage)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL); static id _logos_method$_ungrouped$EmulationViewController$emulationNDEFMessage(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL); static void (*_logos_orig$_ungrouped$EmulationViewController$setEmulationNDEFMessage$)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static void _logos_method$_ungrouped$EmulationViewController$setEmulationNDEFMessage$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL, id); static NSString * (*_logos_orig$_ungrouped$EmulationViewController$debugDescription)(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL); static NSString * _logos_method$_ungrouped$EmulationViewController$debugDescription(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST, SEL); 

#line 11 "/Users/xiao.han/Documents/插件/NFCWritterHelper/NFCWritterHelper/NFCWritterHelper.xm"


static void _logos_method$_ungrouped$MainTabBarController$tabBarController$didSelectViewController$(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, id arg2) { HBLogDebug(@"-[<MainTabBarController: %p> tabBarController:%@ didSelectViewController:%@]: %@", self, arg1, arg2, (@"hx-----"));_logos_orig$_ungrouped$MainTabBarController$tabBarController$didSelectViewController$(self, _cmd, arg1, arg2); }
static void _logos_method$_ungrouped$MainTabBarController$daemonConnectionDied$(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<MainTabBarController: %p> daemonConnectionDied:%@]: %@", self, arg1, (@"hx-----"));_logos_orig$_ungrouped$MainTabBarController$daemonConnectionDied$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$MainTabBarController$no_nfcd_connection$(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<MainTabBarController: %p> no_nfcd_connection:%@]: %@", self, arg1, (@"hx-----"));_logos_orig$_ungrouped$MainTabBarController$no_nfcd_connection$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$MainTabBarController$mailComposeController$didFinishWithResult$error$(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, long long arg2, id arg3) { HBLogDebug(@"-[<MainTabBarController: %p> mailComposeController:%@ didFinishWithResult:%lld error:%@]: %@", self, arg1, arg2, arg3, (@"hx-----"));_logos_orig$_ungrouped$MainTabBarController$mailComposeController$didFinishWithResult$error$(self, _cmd, arg1, arg2, arg3); }
static MainTabBarController* _logos_method$_ungrouped$MainTabBarController$init(_LOGOS_SELF_TYPE_INIT MainTabBarController* __unused self, SEL __unused _cmd) _LOGOS_RETURN_RETAINED { HBLogDebug(@"-[<MainTabBarController: %p> init]: %@", self, (@"hx-----"));id r = _logos_orig$_ungrouped$MainTabBarController$init(self, _cmd); HBLogDebug(@" = %@", r); return r; }
static void _logos_method$_ungrouped$MainTabBarController$viewDidLayoutSubviews(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<MainTabBarController: %p> viewDidLayoutSubviews]: %@", self, (@"hx-----"));_logos_orig$_ungrouped$MainTabBarController$viewDidLayoutSubviews(self, _cmd); }
static unsigned long long _logos_method$_ungrouped$MainTabBarController$supportedInterfaceOrientations(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<MainTabBarController: %p> supportedInterfaceOrientations]: %@", self, (@"hx-----"));unsigned long long r = _logos_orig$_ungrouped$MainTabBarController$supportedInterfaceOrientations(self, _cmd); HBLogDebug(@" = %llu", r); return r; }
static void _logos_method$_ungrouped$MainTabBarController$viewDidLoad(_LOGOS_SELF_TYPE_NORMAL MainTabBarController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd){
    HBLogDebug(@"-[<MainTabBarController: %p> viewDidLoad]: %@", self, (@"hx-----"));_logos_orig$_ungrouped$MainTabBarController$viewDidLoad(self, _cmd);
}





static id _logos_method$_ungrouped$EmulationViewController$title(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<EmulationViewController: %p> title]: %@", self, (@"hx-----"));id r = _logos_orig$_ungrouped$EmulationViewController$title(self, _cmd); HBLogDebug(@" = %@", r); return r; }
static void _logos_method$_ungrouped$EmulationViewController$showPickLength(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<EmulationViewController: %p> showPickLength]: %@", self, (@"hx-----"));_logos_orig$_ungrouped$EmulationViewController$showPickLength(self, _cmd); }
static void _logos_method$_ungrouped$EmulationViewController$setUIDLength$reset$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, int arg1, _Bool arg2) { HBLogDebug(@"-[<EmulationViewController: %p> setUIDLength:%d reset:%d]: %@", self, arg1, arg2, (@"hx-----"));_logos_orig$_ungrouped$EmulationViewController$setUIDLength$reset$(self, _cmd, arg1, arg2); }
static _Bool _logos_method$_ungrouped$EmulationViewController$textField$shouldChangeCharactersInRange$replacementString$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1, struct _NSRange arg2, id arg3) { HBLogDebug(@"-[<EmulationViewController: %p> textField:%@ shouldChangeCharactersInRange:-- replacementString:%@]: %@", self, arg1, arg3, (@"hx-----"));_Bool r = _logos_orig$_ungrouped$EmulationViewController$textField$shouldChangeCharactersInRange$replacementString$(self, _cmd, arg1, arg2, arg3); HBLogDebug(@" = %d", r); return r; }
static _Bool _logos_method$_ungrouped$EmulationViewController$textFieldShouldReturn$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<EmulationViewController: %p> textFieldShouldReturn:%@]: %@", self, arg1, (@"hx-----"));_Bool r = _logos_orig$_ungrouped$EmulationViewController$textFieldShouldReturn$(self, _cmd, arg1); HBLogDebug(@" = %d", r); return r; }
static void _logos_method$_ungrouped$EmulationViewController$setButtonEnabled$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, _Bool arg1) { HBLogDebug(@"-[<EmulationViewController: %p> setButtonEnabled:%d]: %@", self, arg1, (@"hx-----"));_logos_orig$_ungrouped$EmulationViewController$setButtonEnabled$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$EmulationViewController$buttonTapped$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<EmulationViewController: %p> buttonTapped:%@]: %@", self, arg1, (@"hx-----"));_logos_orig$_ungrouped$EmulationViewController$buttonTapped$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$EmulationViewController$hostSessionDidEnd$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<EmulationViewController: %p> hostSessionDidEnd:%@]: %@", self, arg1, (@"hx-----"));_logos_orig$_ungrouped$EmulationViewController$hostSessionDidEnd$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$EmulationViewController$hostSessionDidStart$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<EmulationViewController: %p> hostSessionDidStart:%@]: %@", self, arg1, (@"hx-----"));_logos_orig$_ungrouped$EmulationViewController$hostSessionDidStart$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$EmulationViewController$chooseFromSaved$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<EmulationViewController: %p> chooseFromSaved:%@]: %@", self, arg1, (@"hx-----"));_logos_orig$_ungrouped$EmulationViewController$chooseFromSaved$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$EmulationViewController$setNewUID$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<EmulationViewController: %p> setNewUID:%@]: %@", self, arg1, (@"hx-----"));_logos_orig$_ungrouped$EmulationViewController$setNewUID$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$EmulationViewController$emulationDataWrite$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<EmulationViewController: %p> emulationDataWrite:%@]: %@", self, arg1, (@"hx-----"));_logos_orig$_ungrouped$EmulationViewController$emulationDataWrite$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$EmulationViewController$emulationDataRead$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<EmulationViewController: %p> emulationDataRead:%@]: %@", self, arg1, (@"hx-----"));_logos_orig$_ungrouped$EmulationViewController$emulationDataRead$(self, _cmd, arg1); }
static void _logos_method$_ungrouped$EmulationViewController$viewDidLoad(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<EmulationViewController: %p> viewDidLoad]: %@", self, (@"hx-----"));_logos_orig$_ungrouped$EmulationViewController$viewDidLoad(self, _cmd); }
static void _logos_method$_ungrouped$EmulationViewController$loadView(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<EmulationViewController: %p> loadView]: %@", self, (@"hx-----"));_logos_orig$_ungrouped$EmulationViewController$loadView(self, _cmd); }
static id _logos_method$_ungrouped$EmulationViewController$emulationNDEFMessage(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<EmulationViewController: %p> emulationNDEFMessage]: %@", self, (@"hx-----"));id r = _logos_orig$_ungrouped$EmulationViewController$emulationNDEFMessage(self, _cmd); HBLogDebug(@" = %@", r); return r; }
static void _logos_method$_ungrouped$EmulationViewController$setEmulationNDEFMessage$(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd, id arg1) { HBLogDebug(@"-[<EmulationViewController: %p> setEmulationNDEFMessage:%@]: %@", self, arg1, (@"hx-----"));_logos_orig$_ungrouped$EmulationViewController$setEmulationNDEFMessage$(self, _cmd, arg1); }
static NSString * _logos_method$_ungrouped$EmulationViewController$debugDescription(_LOGOS_SELF_TYPE_NORMAL EmulationViewController* _LOGOS_SELF_CONST __unused self, SEL __unused _cmd) { HBLogDebug(@"-[<EmulationViewController: %p> debugDescription]: %@", self, (@"hx-----"));NSString * r = _logos_orig$_ungrouped$EmulationViewController$debugDescription(self, _cmd); HBLogDebug(@" = %@", r); return r; }










static __attribute__((constructor)) void _logosLocalInit() {
{Class _logos_class$_ungrouped$MainTabBarController = objc_getClass("MainTabBarController"); MSHookMessageEx(_logos_class$_ungrouped$MainTabBarController, @selector(tabBarController:didSelectViewController:), (IMP)&_logos_method$_ungrouped$MainTabBarController$tabBarController$didSelectViewController$, (IMP*)&_logos_orig$_ungrouped$MainTabBarController$tabBarController$didSelectViewController$);MSHookMessageEx(_logos_class$_ungrouped$MainTabBarController, @selector(daemonConnectionDied:), (IMP)&_logos_method$_ungrouped$MainTabBarController$daemonConnectionDied$, (IMP*)&_logos_orig$_ungrouped$MainTabBarController$daemonConnectionDied$);MSHookMessageEx(_logos_class$_ungrouped$MainTabBarController, @selector(no_nfcd_connection:), (IMP)&_logos_method$_ungrouped$MainTabBarController$no_nfcd_connection$, (IMP*)&_logos_orig$_ungrouped$MainTabBarController$no_nfcd_connection$);MSHookMessageEx(_logos_class$_ungrouped$MainTabBarController, @selector(mailComposeController:didFinishWithResult:error:), (IMP)&_logos_method$_ungrouped$MainTabBarController$mailComposeController$didFinishWithResult$error$, (IMP*)&_logos_orig$_ungrouped$MainTabBarController$mailComposeController$didFinishWithResult$error$);MSHookMessageEx(_logos_class$_ungrouped$MainTabBarController, @selector(init), (IMP)&_logos_method$_ungrouped$MainTabBarController$init, (IMP*)&_logos_orig$_ungrouped$MainTabBarController$init);MSHookMessageEx(_logos_class$_ungrouped$MainTabBarController, @selector(viewDidLayoutSubviews), (IMP)&_logos_method$_ungrouped$MainTabBarController$viewDidLayoutSubviews, (IMP*)&_logos_orig$_ungrouped$MainTabBarController$viewDidLayoutSubviews);MSHookMessageEx(_logos_class$_ungrouped$MainTabBarController, @selector(supportedInterfaceOrientations), (IMP)&_logos_method$_ungrouped$MainTabBarController$supportedInterfaceOrientations, (IMP*)&_logos_orig$_ungrouped$MainTabBarController$supportedInterfaceOrientations);MSHookMessageEx(_logos_class$_ungrouped$MainTabBarController, @selector(viewDidLoad), (IMP)&_logos_method$_ungrouped$MainTabBarController$viewDidLoad, (IMP*)&_logos_orig$_ungrouped$MainTabBarController$viewDidLoad);Class _logos_class$_ungrouped$EmulationViewController = objc_getClass("EmulationViewController"); MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(title), (IMP)&_logos_method$_ungrouped$EmulationViewController$title, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$title);MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(showPickLength), (IMP)&_logos_method$_ungrouped$EmulationViewController$showPickLength, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$showPickLength);MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(setUIDLength:reset:), (IMP)&_logos_method$_ungrouped$EmulationViewController$setUIDLength$reset$, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$setUIDLength$reset$);MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(textField:shouldChangeCharactersInRange:replacementString:), (IMP)&_logos_method$_ungrouped$EmulationViewController$textField$shouldChangeCharactersInRange$replacementString$, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$textField$shouldChangeCharactersInRange$replacementString$);MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(textFieldShouldReturn:), (IMP)&_logos_method$_ungrouped$EmulationViewController$textFieldShouldReturn$, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$textFieldShouldReturn$);MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(setButtonEnabled:), (IMP)&_logos_method$_ungrouped$EmulationViewController$setButtonEnabled$, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$setButtonEnabled$);MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(buttonTapped:), (IMP)&_logos_method$_ungrouped$EmulationViewController$buttonTapped$, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$buttonTapped$);MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(hostSessionDidEnd:), (IMP)&_logos_method$_ungrouped$EmulationViewController$hostSessionDidEnd$, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$hostSessionDidEnd$);MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(hostSessionDidStart:), (IMP)&_logos_method$_ungrouped$EmulationViewController$hostSessionDidStart$, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$hostSessionDidStart$);MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(chooseFromSaved:), (IMP)&_logos_method$_ungrouped$EmulationViewController$chooseFromSaved$, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$chooseFromSaved$);MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(setNewUID:), (IMP)&_logos_method$_ungrouped$EmulationViewController$setNewUID$, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$setNewUID$);MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(emulationDataWrite:), (IMP)&_logos_method$_ungrouped$EmulationViewController$emulationDataWrite$, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$emulationDataWrite$);MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(emulationDataRead:), (IMP)&_logos_method$_ungrouped$EmulationViewController$emulationDataRead$, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$emulationDataRead$);MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(viewDidLoad), (IMP)&_logos_method$_ungrouped$EmulationViewController$viewDidLoad, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$viewDidLoad);MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(loadView), (IMP)&_logos_method$_ungrouped$EmulationViewController$loadView, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$loadView);MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(emulationNDEFMessage), (IMP)&_logos_method$_ungrouped$EmulationViewController$emulationNDEFMessage, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$emulationNDEFMessage);MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(setEmulationNDEFMessage:), (IMP)&_logos_method$_ungrouped$EmulationViewController$setEmulationNDEFMessage$, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$setEmulationNDEFMessage$);MSHookMessageEx(_logos_class$_ungrouped$EmulationViewController, @selector(debugDescription), (IMP)&_logos_method$_ungrouped$EmulationViewController$debugDescription, (IMP*)&_logos_orig$_ungrouped$EmulationViewController$debugDescription);} }
#line 56 "/Users/xiao.han/Documents/插件/NFCWritterHelper/NFCWritterHelper/NFCWritterHelper.xm"
